<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>c&#43;&#43; - 分类 - 渤海深处的博客</title>
        <link>https://rustintherubble.github.io/categories/c&#43;&#43;/</link>
        <description>c&#43;&#43; - 分类 - 渤海深处的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 16 Aug 2023 15:01:03 &#43;0800</lastBuildDate><atom:link href="https://rustintherubble.github.io/categories/c&#43;&#43;/" rel="self" type="application/rss+xml" /><item>
    <title>关于 C&#43;&#43; STL vector 中的 push_back 和 emplace_back，reserve 和 resize</title>
    <link>https://rustintherubble.github.io/posts/2023/08/cpp_emplace_push/</link>
    <pubDate>Wed, 16 Aug 2023 15:01:03 &#43;0800</pubDate>
    <author>渤海深处</author>
    <guid>https://rustintherubble.github.io/posts/2023/08/cpp_emplace_push/</guid>
    <description><![CDATA[push_back 和 emplace_back 在 vector 尾部插入元素有两种方法：push_back() 和 emplace_back() 函数原型 void push_back (const value_type&amp; val);void push_back (value_type&amp;&amp; val); template &lt;class... Args&gt; void emplace_back (Args&amp;&amp;... args); 调用 push_back 的过程 将调用构造函数来创建临时对象。]]></description>
</item>
<item>
    <title>C&#43;&#43; Primer Plus 笔记 (14-18章)</title>
    <link>https://rustintherubble.github.io/posts/2023/05/cpp_primer_plus_note_2/</link>
    <pubDate>Thu, 08 Jun 2023 10:00:24 &#43;0800</pubDate>
    <author>渤海深处</author>
    <guid>https://rustintherubble.github.io/posts/2023/05/cpp_primer_plus_note_2/</guid>
    <description><![CDATA[C++中的代码重用 包含对象成员的类 使用 explicit 防止单参数构造函数的隐式转换 私有继承 使用私有继承，基类的公有成员和保护成员都将成为派生类的私有成员。]]></description>
</item>
<item>
    <title>C&#43;&#43; Primer Plus 笔记 (9-13章)</title>
    <link>https://rustintherubble.github.io/posts/2023/05/cpp_primer_plus_note/</link>
    <pubDate>Wed, 31 May 2023 10:37:43 &#43;0800</pubDate>
    <author>渤海深处</author>
    <guid>https://rustintherubble.github.io/posts/2023/05/cpp_primer_plus_note/</guid>
    <description><![CDATA[内存模型和名称空间 单独编译 组件函数独立放置在文件中，将程序分为头文件、源代码文件、源代码文件&hellip; 头文件常包含 函数原型 使用 #define 或 const 定]]></description>
</item>
<item>
    <title>PC向开发板传输文件 通过wifi</title>
    <link>https://rustintherubble.github.io/posts/2023/04/transfer_files_through_wifi/</link>
    <pubDate>Tue, 25 Apr 2023 10:39:58 &#43;0800</pubDate>
    <author>渤海深处</author>
    <guid>https://rustintherubble.github.io/posts/2023/04/transfer_files_through_wifi/</guid>
    <description><![CDATA[目的 在PC上交叉编译好的文件要传输的开发板，用u盘的话太麻烦 PC使用的语言python，开发板使用的是c++ 通过wifi建立socket通信]]></description>
</item>
<item>
    <title>C&#43;&#43; UTC时间戳转化为年月日时分秒</title>
    <link>https://rustintherubble.github.io/posts/2023/04/c&#43;&#43;_timestampformat/</link>
    <pubDate>Sat, 08 Apr 2023 21:47:20 &#43;0800</pubDate>
    <author>渤海深处</author>
    <guid>https://rustintherubble.github.io/posts/2023/04/c&#43;&#43;_timestampformat/</guid>
    <description><![CDATA[方法 使用&lt;ctime&gt;中的 gmtime 进行转换，输入的 timestamp 格式为 Milliseconds 级别 转换为北京时间需要在UTC基础上加8 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17]]></description>
</item>
</channel>
</rss>
